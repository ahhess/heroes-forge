<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>heroes</groupId>
  <artifactId>heroes-forge</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <build>
    <finalName>heroes-forge</finalName>
  </build>
  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
<!--     <dependency> -->
<!--     	<groupId>postgresql</groupId> -->
<!--         <artifactId>postgresql</artifactId> -->
<!--         <version>9.0-801.jdbc4</version> -->
<!--     	<scope>runtime</scope> -->
<!--     </dependency> -->
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.spec</groupId>
        <artifactId>jboss-javaee-6.0</artifactId>
        <version>3.0.3.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>2.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.enterprise</groupId>
        <artifactId>cdi-api</artifactId>
        <version>1.1</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
       <!-- The default profile skips all tests, though you can tune it 
          to run just unit tests based on a custom pattern -->
       <!-- Seperate profiles are provided for running all tests, including 
          Arquillian tests that execute in the specified container -->
       <id>default</id>
       <activation>
          <activeByDefault>true</activeByDefault>
       </activation>
       <build>
          <plugins>
             <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                   <skip>true</skip>
                </configuration>
             </plugin>
          </plugins>
       </build>
    </profile>

    <profile>
       <!-- An optional Arquillian testing profile that executes tests 
          in your JBoss AS instance -->
       <!-- This profile will start a new JBoss AS instance, and execute 
          the test, shutting it down when done -->
       <!-- Run with: mvn clean test -Parq-jbossas-managed -->
       <id>arq-jbossas-managed</id>
       <dependencies>
          <dependency>
             <groupId>org.jboss.as</groupId>
             <artifactId>jboss-as-arquillian-container-managed</artifactId>
             <scope>test</scope>
          </dependency>
       </dependencies>
    </profile>

    <profile>
       <!-- An optional Arquillian testing profile that executes tests 
          in a remote JBoss AS instance -->
       <!-- Run with: mvn clean test -Parq-jbossas-remote -->
       <id>arq-jbossas-remote</id>
       <dependencies>
          <dependency>
             <groupId>org.jboss.as</groupId>
             <artifactId>jboss-as-arquillian-container-remote</artifactId>
             <scope>test</scope>
          </dependency>
       </dependencies>
    </profile>
    
    <profile>
       <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
       <!-- Use this profile for any OpenShift specific customization your app will need. -->
       <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
       <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
       <id>openshift</id>
       <build>
          <plugins>
             <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                   <outputDirectory>deployments</outputDirectory>
                   <warName>ROOT</warName>
                </configuration>
             </plugin>
          </plugins>
       </build>
    </profile>

 </profiles>

</project>
